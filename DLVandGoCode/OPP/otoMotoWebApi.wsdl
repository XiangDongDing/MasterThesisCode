<?xml version="1.0" encoding="UTF-8"?><definitions xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="urn:otoMotoWebApi" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:typens="urn:otoMotoWebApi" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="urn:otoMotoWebApi"><types><xsd:schema targetNamespace="urn:otoMotoWebApi"> <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/" /> <xsd:import namespace="http://schemas.xmlsoap.org/wsdl/" /> <xsd:complexType name="AllegroCategory">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="children" type="tns:ArrayOfAllegroCategories"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="ArrayOfAllegroCategories">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:AllegroCategory[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfArticleCategories">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:ArticleCategory[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfArticles">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Article[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfColours">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Colour[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfContactNumbers">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:ContactNumber[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfCountries">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Country[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfCurrencies">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Currency[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfDealers">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Dealer[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfDictionaryItem">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:DictionaryItem[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfExportInfos">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:ExportInfo[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfFormErrors">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:FormError[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfFuelTypes">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:FuelType[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfGearBoxTypes">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:GearBoxType[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfInsertions">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Insertion[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfKeyValue">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:KeyValue[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfMakes">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Make[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfModels">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Model[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfNews">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:News[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfPartCategories">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:PartCategory[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfPhotoLinks">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:PhotoLink[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfPromotions">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Promotion[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfProvinces">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Province[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfSearchItems">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:SearchItem[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfStrings">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="xsd:string[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfTransferUnits">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:TransferUnit[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfTransmissionTypes">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:TransmissionType[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfVehicleCategories">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:VehicleCategory[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfVehicleExtras">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:VehicleExtra[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfVehicleFeatures">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:VehicleFeature[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfVehicleKinds">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:VehicleKind[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="ArrayOfVersions">  <xsd:complexContent>   <xsd:restriction base="SOAP-ENC:Array">    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:Version[]"/>   </xsd:restriction>  </xsd:complexContent> </xsd:complexType> <xsd:complexType name="Article">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="category-id" type="xsd:string"/>   <xsd:element name="creation-date" type="xsd:string"/>   <xsd:element name="main-page" type="xsd:string"/>   <xsd:element name="title" type="xsd:string"/>   <xsd:element name="intro" type="xsd:string"/>   <xsd:element name="body" type="xsd:string"/>   <xsd:element name="author" type="xsd:string"/>   <xsd:element name="source" type="xsd:string"/>   <xsd:element name="photos-num" type="xsd:int"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="ArticleCategory">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="ArticlePhoto">  <xsd:all>   <xsd:element name="number" type="xsd:int"/>   <xsd:element name="link" type="xsd:string"/>   <xsd:element name="body" type="xsd:base64Binary"/>   <xsd:element name="body-content-type" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Colour">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="ContactNumber">  <xsd:all>   <xsd:element name="type" type="xsd:string"/>   <xsd:element name="country-code" type="xsd:int"/>   <xsd:element name="area-code" type="xsd:string"/>   <xsd:element name="number" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Country">  <xsd:all>   <xsd:element name="id" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="phone-prefix" type="xsd:int"/>   <xsd:element name="code" type="xsd:int"/>   <xsd:element name="currency-id" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Currency">  <xsd:all>   <xsd:element name="currency-id" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Dealer">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="alias" type="xsd:string"/>   <xsd:element name="status" type="xsd:string" nillable="1"/>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="legal-form" type="xsd:string"/>   <xsd:element name="street-address" type="xsd:string"/>   <xsd:element name="postcode" type="xsd:string"/>   <xsd:element name="city" type="xsd:string"/>   <xsd:element name="country-id" type="xsd:string"/>   <xsd:element name="province-id" type="xsd:int"/>   <xsd:element name="province-name" type="xsd:string"/>   <xsd:element name="contact-list" type="tns:ArrayOfContactNumbers"/>   <xsd:element name="activation-date" type="xsd:string" nillable="1"/>   <xsd:element name="expiration-date" type="xsd:string" nillable="1"/>   <xsd:element name="active-insertions" type="xsd:int" nillable="1"/>   <xsd:element name="inactive-insertions" type="xsd:int" nillable="1"/>   <xsd:element name="current-exposure-counter" type="xsd:int" nillable="1"/>   <xsd:element name="current-account-balance" type="xsd:float" nillable="1"/>   <xsd:element name="fee-current" type="xsd:string" nillable="1"/>   <xsd:element name="fee-next" type="xsd:string" nillable="1"/>   <xsd:element name="max-exposures" type="xsd:int" nillable="1"/>   <xsd:element name="email-active" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="DictionaryItem">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="ExportInfo">  <xsd:all>   <xsd:element name="export-id" type="xsd:int"/>   <xsd:element name="insertion" type="tns:Insertion"/>   <xsd:element name="order-type" type="xsd:string"/>   <xsd:element name="status" type="xsd:string"/>   <xsd:element name="additional-data" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="FormError">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="desc" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="FuelType">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="GearBoxType">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Insertion">  <xsd:all>   <xsd:element name="id" type="xsd:string" nillable="1"/>   <xsd:element name="remote-id" type="xsd:string" nillable="1"/>   <xsd:element name="allegro-cat-id" type="xsd:int" nillable="1"/>   <xsd:element name="status" type="xsd:string" nillable="1"/>   <xsd:element name="type" type="xsd:string" nillable="1"/>   <xsd:element name="make-id" type="xsd:int" nillable="1"/>   <xsd:element name="make-name" type="xsd:string" nillable="1"/>   <xsd:element name="model-id" type="xsd:int" nillable="1"/>   <xsd:element name="model-name" type="xsd:string" nillable="1"/>   <xsd:element name="model-name-extension" type="xsd:string" nillable="1"/>   <xsd:element name="version-id" type="xsd:int" nillable="1"/>   <xsd:element name="version-name" type="xsd:string" nillable="1"/>   <xsd:element name="price" type="xsd:float" nillable="1"/>   <xsd:element name="price-currency" type="xsd:string" nillable="1"/>   <xsd:element name="price-type-key" type="xsd:string" nillable="1"/>   <xsd:element name="price-negotiable" type="xsd:string" nillable="1"/>   <xsd:element name="invoice-available" type="xsd:string" nillable="1"/>   <xsd:element name="leasing" type="xsd:string" nillable="1"/>   <xsd:element name="leasing_compensation_amount" type="xsd:string" nillable="1"/>   <xsd:element name="leasing_instalment_amount" type="xsd:string" nillable="1"/>   <xsd:element name="leasing_instalment_number" type="xsd:string" nillable="1"/>   <xsd:element name="leasing_residual_value" type="xsd:string" nillable="1"/>   <xsd:element name="credit-ability" type="xsd:string" nillable="1"/>   <xsd:element name="build-year" type="xsd:int" nillable="1"/>   <xsd:element name="tech-check-year" type="xsd:int" nillable="1"/>   <xsd:element name="tech-check-month" type="xsd:int" nillable="1"/>   <xsd:element name="insurance-year" type="xsd:int" nillable="1"/>   <xsd:element name="insurance-month" type="xsd:int" nillable="1"/>   <xsd:element name="first-registration-year" type="xsd:int" nillable="1"/>   <xsd:element name="first-registration-month" type="xsd:int" nillable="1"/>   <xsd:element name="odometer" type="xsd:int" nillable="1"/>   <xsd:element name="power" type="xsd:int" nillable="1"/>   <xsd:element name="power-unit" type="xsd:string" nillable="1"/>   <xsd:element name="fuel-type-key" type="xsd:string" nillable="1"/>   <xsd:element name="gearbox-type-key" type="xsd:string" nillable="1"/>   <xsd:element name="colour-key" type="xsd:string" nillable="1"/>   <xsd:element name="colour-metallic" type="xsd:string" nillable="1"/>   <xsd:element name="doors-key" type="xsd:string" nillable="1"/>   <xsd:element name="transmission-key" type="xsd:string" nillable="1"/>   <xsd:element name="load-capacity" type="xsd:int" nillable="1"/>   <xsd:element name="axis-num" type="xsd:int" nillable="1"/>   <xsd:element name="cubic-capacity" type="xsd:int" nillable="1"/>   <xsd:element name="tech-condition" type="xsd:string" nillable="1"/>   <xsd:element name="damaged" type="xsd:string" nillable="1"/>   <xsd:element name="vin" type="xsd:string" nillable="1"/>   <xsd:element name="vehicle-category-key" type="xsd:string" nillable="1"/>   <xsd:element name="vehicle-extras-list" type="tns:ArrayOfVehicleExtras" nillable="1"/>   <xsd:element name="vehicle-features-list" type="tns:ArrayOfVehicleFeatures" nillable="1"/>   <xsd:element name="description" type="xsd:string" nillable="1"/>   <xsd:element name="country-id" type="xsd:string" nillable="1"/>   <xsd:element name="province-id" type="xsd:int" nillable="1"/>   <xsd:element name="province-name" type="xsd:string" nillable="1"/>   <xsd:element name="city-name" type="xsd:string" nillable="1"/>   <xsd:element name="contact-list" type="tns:ArrayOfContactNumbers" nillable="1"/>   <xsd:element name="seller-email" type="xsd:string" nillable="1"/>   <xsd:element name="seller-postal-code" type="xsd:string" nillable="1"/>   <xsd:element name="dealer" type="tns:Dealer" nillable="1"/>   <xsd:element name="photo-num" type="xsd:int" nillable="1"/>   <xsd:element name="views-num" type="xsd:int" nillable="1"/>   <xsd:element name="modification-datetime" type="xsd:string" nillable="1"/>   <xsd:element name="expiration-date" type="xsd:string" nillable="1"/>   <xsd:element name="short-link" type="xsd:string" nillable="1"/>   <xsd:element name="any-country" type="xsd:string" nillable="1"/>   <xsd:element name="origin-status" type="xsd:int" nillable="1"/>   <xsd:element name="origin-country" type="xsd:string" nillable="1"/>   <xsd:element name="registration-country" type="xsd:string" nillable="1"/>   <xsd:element name="tablica-province" type="xsd:string" nillable="1"/>   <xsd:element name="seller-name" type="xsd:string" nillable="1"/>   <xsd:element name="seller-street" type="xsd:string" nillable="1"/>   <xsd:element name="regulations-agreement" type="xsd:string" nillable="1"/>   <xsd:element name="special-promotion" type="xsd:string" nillable="1"/>   <xsd:element name="vehicle-kind" type="xsd:string" nillable="1"/>   <xsd:element name="new-part" type="xsd:string" nillable="1"/>   <xsd:element name="part-category" type="xsd:int" nillable="1"/>   <xsd:element name="vehicle-type" type="xsd:string" nillable="1"/>   <xsd:element name="drive-kind" type="xsd:string" nillable="1"/>   <xsd:element name="weight" type="xsd:int" nillable="1"/>   <xsd:element name="cylinder-numbers" type="xsd:int" nillable="1"/>   <xsd:element name="wheel-numbers" type="xsd:int" nillable="1"/>   <xsd:element name="tonnage" type="xsd:int" nillable="1"/>   <xsd:element name="bringing-height" type="xsd:int" nillable="1"/>   <xsd:element name="place-numbers" type="xsd:int" nillable="1"/>   <xsd:element name="engine-numbers" type="xsd:int" nillable="1"/>   <xsd:element name="propeller-blade-numbers" type="xsd:int" nillable="1"/>   <xsd:element name="motohour-numbers-to-review" type="xsd:int" nillable="1"/>   <xsd:element name="weight-kg" type="xsd:float" nillable="1"/>   <xsd:element name="gear-numbers" type="xsd:int" nillable="1"/>   <xsd:element name="wheels-size" type="xsd:int" nillable="1"/>   <xsd:element name="operating-weight" type="xsd:int" nillable="1"/>   <xsd:element name="max-bucket-capacity" type="xsd:int" nillable="1"/>   <xsd:element name="max-reach-digging-depth" type="xsd:int" nillable="1"/>   <xsd:element name="boom" type="xsd:string" nillable="1"/>   <xsd:element name="net-power" type="xsd:int" nillable="1"/>   <xsd:element name="track-width" type="xsd:int" nillable="1"/>   <xsd:element name="blade" type="xsd:string" nillable="1"/>   <xsd:element name="blade-width" type="xsd:string" nillable="1"/>   <xsd:element name="promotions-list" type="tns:ArrayOfPromotions" nillable="1"/>   <xsd:element name="auction-id" type="xsd:int" nillable="1"/>   <xsd:element name="creation-date" type="xsd:string" nillable="1"/>   <xsd:element name="vehicle-subtype1" type="xsd:string" nillable="1"/>   <xsd:element name="vehicle-subtype2" type="xsd:string" nillable="1"/>   <xsd:element name="vehicle-subtype3" type="xsd:string" nillable="1"/>   <xsd:element name="additional-info" type="xsd:string" nillable="1"/>   <xsd:element name="drive-type" type="xsd:string" nillable="1"/>   <xsd:element name="mechanism-type" type="xsd:string" nillable="1"/>   <xsd:element name="capacity" type="xsd:int" nillable="1"/>   <xsd:element name="width" type="xsd:int" nillable="1"/>   <xsd:element name="rows-num" type="xsd:string" nillable="1"/>   <xsd:element name="chassis-type" type="xsd:string" nillable="1"/>   <xsd:element name="photos" type="tns:ArrayOfPhotoLinks" nillable="1"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="InsertionPhoto">  <xsd:all>   <xsd:element name="number" type="xsd:int"/>   <xsd:element name="link" type="xsd:string"/>   <xsd:element name="body" type="xsd:base64Binary"/>   <xsd:element name="body-content-type" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="KeyValue">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="value" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Make">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="type" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Model">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="make-id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="parent-id" type="xsd:int" parent-id="parent-id"/>   <xsd:element name="group" type="xsd:boolean" group="group"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="News">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="type" type="xsd:string"/>   <xsd:element name="creation-date" type="xsd:string"/>   <xsd:element name="main-page" type="xsd:string"/>   <xsd:element name="title" type="xsd:string"/>   <xsd:element name="intro" type="xsd:string"/>   <xsd:element name="body" type="xsd:string"/>   <xsd:element name="source-name" type="xsd:string"/>   <xsd:element name="source-link" type="xsd:string"/>   <xsd:element name="photos-num" type="xsd:int"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="NewsPhoto">  <xsd:all>   <xsd:element name="number" type="xsd:int"/>   <xsd:element name="link" type="xsd:string"/>   <xsd:element name="body" type="xsd:base64Binary"/>   <xsd:element name="body-content-type" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="PartCategory">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="PhotoLink">  <xsd:all>   <xsd:element name="number" type="xsd:int"/>   <xsd:element name="mini" type="xsd:string"/>   <xsd:element name="medium" type="xsd:string"/>   <xsd:element name="normal" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Promotion">  <xsd:all>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="expiration-date" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Province">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="SearchItem">  <xsd:all>   <xsd:element name="id" type="xsd:string" nillable="1"/>   <xsd:element name="params" type="tns:ArrayOfKeyValue" nillable="1"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="TransferUnit">  <xsd:all>   <xsd:element name="unit-id" type="xsd:string" unit-id="key"/>   <xsd:element name="type" type="xsd:string" nillable="1"/>   <xsd:element name="insertion-id" type="xsd:string" insertion-id="name" nillable="1"/>   <xsd:element name="sender-id" type="xsd:string" nillable="1"/>   <xsd:element name="receiver-id" type="xsd:string"/>   <xsd:element name="action" type="xsd:string" nillable="1"/>   <xsd:element name="ack" type="xsd:string" nillable="1"/>   <xsd:element name="insertion" type="tns:Insertion" nillable="1"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="TransmissionType">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="UnitTransferInfo">  <xsd:all>   <xsd:element name="unit-id" type="xsd:int"/>   <xsd:element name="insertion" type="tns:Insertion"/>   <xsd:element name="order-type" type="xsd:string"/>   <xsd:element name="status" type="xsd:string"/>   <xsd:element name="additional-data" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="VehicleCategory">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>   <xsd:element name="type" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="VehicleExtra">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="VehicleFeature">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="VehicleKind">  <xsd:all>   <xsd:element name="key" type="xsd:string"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType> <xsd:complexType name="Version">  <xsd:all>   <xsd:element name="id" type="xsd:int"/>   <xsd:element name="make-id" type="xsd:int"/>   <xsd:element name="model-id" type="xsd:int"/>   <xsd:element name="name" type="xsd:string"/>  </xsd:all> </xsd:complexType></xsd:schema></types><message name="doCounterDeleteRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doCounterDeleteResponse">  <part name="status" type="xsd:string" /></message><message name="doDataStorageRequest">  <part name="webapi-key" type="xsd:string" />  <part name="e-mail" type="xsd:string" />  <part name="name" type="xsd:string" />  <part name="surname" type="xsd:string" /></message><message name="doDataStorageResponse">  <part name="result" type="xsd:string" /></message><message name="doDealerInsertionActivateRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doDealerInsertionActivateResponse">  <part name="expiration-date" type="xsd:string" />  <part name="modification-datetime" type="xsd:string" /></message><message name="doDealerInsertionInactivateRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doDealerInsertionInactivateResponse">  <part name="status" type="xsd:string" />  <part name="remove-date" type="xsd:string" />  <part name="modification-datetime" type="xsd:string" /></message><message name="doDealerLoginRequest">  <part name="dealer-login" type="xsd:string" />  <part name="dealer-password" type="xsd:string" />  <part name="country-code" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doDealerLoginResponse">  <part name="session-id" type="xsd:string" />  <part name="dealer" type="tns:Dealer" /></message><message name="doDealerLogoutRequest">  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doDealerLogoutResponse">  <part name="result" type="xsd:string" /></message><message name="doDealerSearchRequest">  <part name="webapi-key" type="xsd:string" />  <part name="limit" type="xsd:int" />  <part name="page" type="xsd:int" />  <part name="name" type="xsd:string" />  <part name="country-id" type="xsd:string" />  <part name="province-id" type="xsd:int" />  <part name="city" type="xsd:string" /></message><message name="doDealerSearchResponse">  <part name="results-list" type="tns:ArrayOfDealers" />  <part name="results-count" type="xsd:string" /></message><message name="doExportRequest">  <part name="partner-id" type="xsd:string" />  <part name="partner-password" type="xsd:string" />  <part name="order-type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doExportResponse">  <part name="insertions-list" type="tns:ArrayOfExportInfos" /></message><message name="doExportAckRequest">  <part name="partner-id" type="xsd:string" />  <part name="partner-password" type="xsd:string" />  <part name="export-info-list" type="tns:ArrayOfExportInfos" />  <part name="webapi-key" type="xsd:string" /></message><message name="doExportAckResponse">  <part name="status" type="xsd:string" /></message><message name="doHelloRequest">  <part name="test-hello-string" type="xsd:string" /></message><message name="doHelloResponse">  <part name="return-string" type="xsd:string" /></message><message name="doInsertionDeleteRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doInsertionDeleteResponse">  <part name="status" type="xsd:string" /></message><message name="doInsertionEditRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doInsertionEditResponse">  <part name="status" type="xsd:string" />  <part name="error-list" type="tns:ArrayOfFormErrors" />  <part name="insertion" type="tns:Insertion" /></message><message name="doInsertionLoginRequest">  <part name="user-email" type="xsd:string" />  <part name="password" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doInsertionLoginResponse">  <part name="session-id" type="xsd:string" />  <part name="insertion" type="tns:Insertion" /></message><message name="doInsertionLogoutRequest">  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doInsertionLogoutResponse">  <part name="result" type="xsd:string" /></message><message name="doInsertionSearchRequest">  <part name="type" type="xsd:string" />  <part name="make-model-phrase" type="xsd:string" />  <part name="make-id" type="xsd:int" />  <part name="model-name" type="xsd:string" />  <part name="price-from" type="xsd:int" />  <part name="price-to" type="xsd:int" />  <part name="price-currency" type="xsd:string" />  <part name="build-year-from" type="xsd:int" />  <part name="build-year-to" type="xsd:int" />  <part name="odometer-from" type="xsd:int" />  <part name="odometer-to" type="xsd:int" />  <part name="fuel-type-key" type="xsd:string" />  <part name="country-id" type="xsd:string" />  <part name="province-id" type="xsd:int" />  <part name="city-name" type="xsd:string" />  <part name="vehicle-category-key" type="xsd:string" />  <part name="order-by" type="xsd:string" />  <part name="webapi-key" type="xsd:string" />  <part name="only-promoted" type="xsd:string" />  <part name="model-id" type="xsd:int" />  <part name="dealer-id" type="xsd:int" />  <part name="part-kind-vehicle" type="xsd:string" />  <part name="part-category-id" type="xsd:int" />  <part name="sort" type="xsd:string" />  <part name="extras-list" type="tns:ArrayOfVehicleExtras" />  <part name="features-list" type="tns:ArrayOfVehicleFeatures" />  <part name="cubic-capacity-from" type="xsd:int" />  <part name="cubic-capacity-to" type="xsd:int" />  <part name="gearbox" type="xsd:string" />  <part name="doors" type="xsd:string" />  <part name="colour" type="xsd:string" />  <part name="metallic" type="xsd:string" />  <part name="origin-country" type="xsd:string" />  <part name="registration-country" type="xsd:string" /></message><message name="doInsertionSearchResponse">  <part name="search-query-id" type="xsd:long" />  <part name="status" type="xsd:string" />  <part name="results-no" type="xsd:int" />  <part name="error-list" type="tns:ArrayOfFormErrors" /></message><message name="doInsertionTransferRequest">  <part name="partner-id" type="xsd:string" />  <part name="partner-password" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doInsertionTransferResponse">  <part name="status" type="xsd:string" />  <part name="list" type="tns:ArrayOfTransferUnits" /></message><message name="doInsertionTransferAckRequest">  <part name="partner-id" type="xsd:string" />  <part name="partner-password" type="xsd:string" />  <part name="transfer-unit-list" type="tns:ArrayOfTransferUnits" />  <part name="webapi-key" type="xsd:string" /></message><message name="doInsertionTransferAckResponse">  <part name="status" type="xsd:string" /></message><message name="doPartnerInsertionActivateRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPartnerInsertionActivateResponse">  <part name="expiration-date" type="xsd:string" />  <part name="modification-datetime" type="xsd:string" /></message><message name="doPartnerInsertionInactivateRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPartnerInsertionInactivateResponse">  <part name="status" type="xsd:string" />  <part name="remove-date" type="xsd:string" />  <part name="modification-datetime" type="xsd:string" /></message><message name="doPartnerLoginRequest">  <part name="partner-login" type="xsd:string" />  <part name="partner-password" type="xsd:string" />  <part name="country-code" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPartnerLoginResponse">  <part name="session-id" type="xsd:string" /></message><message name="doPartnerLogoutRequest">  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPartnerLogoutResponse">  <part name="result" type="xsd:string" /></message><message name="doPhotoDeleteRequest">  <part name="insertion-id" type="xsd:string" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPhotoDeleteResponse">  <part name="photo-no" type="xsd:int" /></message><message name="doPhotoEditRequest">  <part name="insertion-id" type="xsd:string" />  <part name="photo" type="tns:InsertionPhoto" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPhotoEditResponse">  <part name="photo-no" type="xsd:int" />  <part name="insertion-modification-datetime" type="xsd:string" /></message><message name="doPrivateInsertionAddRequest">  <part name="insertion" type="tns:Insertion" />  <part name="webapi-key" type="xsd:string" /></message><message name="doPrivateInsertionAddResponse">  <part name="status" type="xsd:string" />  <part name="ad-password" type="xsd:string" />  <part name="error-list" type="tns:ArrayOfFormErrors" />  <part name="insertion" type="tns:Insertion" /></message><message name="doSendContactFormRequest">  <part name="webapi-key" type="xsd:string" />  <part name="insertion-number" type="xsd:string" />  <part name="name" type="xsd:string" />  <part name="email" type="xsd:string" />  <part name="phone" type="xsd:string" />  <part name="comment" type="xsd:string" />  <part name="captha-code" type="xsd:string" />  <part name="user-session-id" type="xsd:string" /></message><message name="doSendContactFormResponse">  <part name="status" type="xsd:string" />  <part name="error-list" type="tns:ArrayOfFormErrors" /></message><message name="doValuationResponseRequest">  <part name="advId" type="xsd:string" />  <part name="valuationLink" type="xsd:string" />  <part name="signature" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="doValuationResponseResponse">  <part name="status" type="xsd:string" /></message><message name="getAgroDictionaryRequest">  <part name="attribute-name" type="xsd:string" />  <part name="category" type="xsd:string" />  <part name="type" type="xsd:string" />  <part name="subtype1" type="xsd:string" />  <part name="subtype2" type="xsd:string" />  <part name="subtype3" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getAgroDictionaryResponse">  <part name="dictionary-list" type="tns:ArrayOfDictionaryItem" /></message><message name="getAllegroCategoriesRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getAllegroCategoriesResponse">  <part name="category-list" type="tns:ArrayOfAllegroCategories" /></message><message name="getAllowedCurrenciesRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getAllowedCurrenciesResponse">  <part name="currencies-list" type="tns:ArrayOfCurrencies" /></message><message name="getArticleCategoriesRequest">  <part name="webapi-key" type="xsd:string" />  <part name="cobrand-id" type="xsd:int" /></message><message name="getArticleCategoriesResponse">  <part name="news-list" type="tns:ArrayOfArticleCategories" /></message><message name="getArticleListRequest">  <part name="webapi-key" type="xsd:string" />  <part name="category-id" type="xsd:int" />  <part name="count" type="xsd:int" />  <part name="cobrand-id" type="xsd:int" /></message><message name="getArticleListResponse">  <part name="article-list" type="tns:ArrayOfArticles" /></message><message name="getArticlePhotoRequest">  <part name="article-id" type="xsd:string" />  <part name="photo-no" type="xsd:int" />  <part name="photo-size" type="xsd:string" />  <part name="result-type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getArticlePhotoResponse">  <part name="photo" type="tns:ArticlePhoto" /></message><message name="getCaptchaRequest">  <part name="webapi-key" type="xsd:string" />  <part name="resource-type" type="xsd:string" />  <part name="resource-id" type="xsd:string" />  <part name="user-session-id" type="xsd:string" /></message><message name="getCaptchaResponse">  <part name="captcha-image" type="xsd:base64Binary" /></message><message name="getColoursRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getColoursResponse">  <part name="colours-list" type="tns:ArrayOfColours" /></message><message name="getConstructionDictionaryRequest">  <part name="attribute-name" type="xsd:string" />  <part name="category" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getConstructionDictionaryResponse">  <part name="dictionary-list" type="tns:ArrayOfDictionaryItem" /></message><message name="getCountriesRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getCountriesResponse">  <part name="country-list" type="tns:ArrayOfCountries" /></message><message name="getDealerInsertionsRequest">  <part name="type" type="xsd:string" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" />  <part name="offset" type="xsd:int" />  <part name="limit" type="xsd:int" /></message><message name="getDealerInsertionsResponse">  <part name="status" type="xsd:string" />  <part name="insertions-list" type="tns:ArrayOfInsertions" /></message><message name="getFuelTypesRequest">  <part name="webapi-key" type="xsd:string" />  <part name="object-type" type="xsd:string" /></message><message name="getFuelTypesResponse">  <part name="fuel-type-list" type="tns:ArrayOfFuelTypes" /></message><message name="getGearBoxTypesRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getGearBoxTypesResponse">  <part name="gear-box-type-list" type="tns:ArrayOfGearBoxTypes" /></message><message name="getInsertionRequest">  <part name="insertion" type="tns:Insertion" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getInsertionResponse">  <part name="insertion" type="tns:Insertion" /></message><message name="getInsertionPhotoRequest">  <part name="insertion-id" type="xsd:string" />  <part name="photo-no" type="xsd:int" />  <part name="photo-size" type="xsd:string" />  <part name="result-type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getInsertionPhotoResponse">  <part name="photo" type="tns:InsertionPhoto" /></message><message name="getInsertionSearchResultsRequest">  <part name="search-query-id" type="xsd:long" />  <part name="start-pos" type="xsd:int" />  <part name="results-limit" type="xsd:int" />  <part name="webapi-key" type="xsd:string" />  <part name="only-promoted" type="xsd:string" /></message><message name="getInsertionSearchResultsResponse">  <part name="results-list" type="tns:ArrayOfInsertions" /></message><message name="getMainPageInsertionRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getMainPageInsertionResponse">  <part name="insertion" type="tns:Insertion" /></message><message name="getMakesRequest">  <part name="type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" />  <part name="group" type="xsd:string" /></message><message name="getMakesResponse">  <part name="make-list" type="tns:ArrayOfMakes" /></message><message name="getModelsRequest">  <part name="make-id" type="xsd:int" />  <part name="webapi-key" type="xsd:string" />  <part name="country-code" type="xsd:string" />  <part name="type" type="xsd:string" /></message><message name="getModelsResponse">  <part name="model-list" type="tns:ArrayOfModels" /></message><message name="getNewsListRequest">  <part name="webapi-key" type="xsd:string" />  <part name="cobrand-id" type="xsd:int" /></message><message name="getNewsListResponse">  <part name="news-list" type="tns:ArrayOfNews" /></message><message name="getNewsPhotoRequest">  <part name="news-id" type="xsd:string" />  <part name="photo-no" type="xsd:int" />  <part name="webapi-key" type="xsd:string" />  <part name="photo-size" type="xsd:string" />  <part name="result-type" type="xsd:string" /></message><message name="getNewsPhotoResponse">  <part name="photo" type="tns:NewsPhoto" /></message><message name="getPartCategoriesRequest">  <part name="kind" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getPartCategoriesResponse">  <part name="part-categories-list" type="tns:ArrayOfPartCategories" /></message><message name="getPartnerInsertionsRequest">  <part name="type" type="xsd:string" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" />  <part name="limit" type="xsd:int" />  <part name="offset" type="xsd:int" /></message><message name="getPartnerInsertionsResponse">  <part name="status" type="xsd:string" />  <part name="insertions-list" type="tns:ArrayOfInsertions" /></message><message name="getPartnerInsertionsNumberRequest">  <part name="type" type="xsd:string" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getPartnerInsertionsNumberResponse">  <part name="status" type="xsd:string" />  <part name="number" type="xsd:int" /></message><message name="getPrivateActivationCodeRequest">  <part name="insertion-id" type="xsd:string" />  <part name="session-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getPrivateActivationCodeResponse">  <part name="sms-code" type="xsd:string" /></message><message name="getPromotedInsertionsRequest">  <part name="results-limit" type="xsd:int" />  <part name="webapi-key" type="xsd:string" /></message><message name="getPromotedInsertionsResponse">  <part name="results-list" type="tns:ArrayOfInsertions" /></message><message name="getProvincesRequest">  <part name="country-id" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getProvincesResponse">  <part name="province-list" type="tns:ArrayOfProvinces" /></message><message name="getSearchItemsRequest">  <part name="webapi-key" type="xsd:string" />  <part name="type" type="xsd:string" />  <part name="params" type="tns:ArrayOfKeyValue" />  <part name="page" type="xsd:int" />  <part name="limit" type="xsd:int" />  <part name="sort" type="xsd:string" /></message><message name="getSearchItemsResponse">  <part name="count" type="xsd:int" />  <part name="searchItems" type="tns:ArrayOfSearchItems" />  <part name="status" type="xsd:string" />  <part name="errors" type="tns:ArrayOfStrings" /></message><message name="getSearchParamsRequest">  <part name="webapi-key" type="xsd:string" />  <part name="type" type="xsd:string" /></message><message name="getSearchParamsResponse">  <part name="params" type="tns:ArrayOfStrings" /></message><message name="getSystemInfoRequest">  <part name="webapi-key" type="xsd:string" /></message><message name="getSystemInfoResponse">  <part name="webapi-version" type="xsd:float" />  <part name="vehicle-data-version" type="xsd:float" />  <part name="allegro-categories-version" type="xsd:float" />  <part name="models-version" type="xsd:int" />  <part name="motd-body" type="xsd:string" />  <part name="motd-link" type="xsd:string" /></message><message name="getTestStringRequest">  <part name="string-size" type="xsd:int" />  <part name="webapi-key" type="xsd:string" /></message><message name="getTestStringResponse">  <part name="return-string" type="xsd:string" /></message><message name="getTransmissionTypesRequest">  <part name="type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getTransmissionTypesResponse">  <part name="transmission-list" type="tns:ArrayOfTransmissionTypes" /></message><message name="getUserInsertionsRequest">  <part name="webapi-key" type="xsd:string" />  <part name="user-type" type="xsd:string" />  <part name="user-id" type="xsd:string" />  <part name="limit" type="xsd:int" />  <part name="page" type="xsd:int" />  <part name="sort-by" type="xsd:string" /></message><message name="getUserInsertionsResponse">  <part name="results-list" type="tns:ArrayOfInsertions" />  <part name="results-count" type="xsd:int" /></message><message name="getVehicleCategoriesRequest">  <part name="type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getVehicleCategoriesResponse">  <part name="category-list" type="tns:ArrayOfVehicleCategories" /></message><message name="getVehicleExtrasRequest">  <part name="type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getVehicleExtrasResponse">  <part name="vehicle-extras-list" type="tns:ArrayOfVehicleExtras" /></message><message name="getVehicleFeaturesRequest">  <part name="type" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getVehicleFeaturesResponse">  <part name="vehicle-features-list" type="tns:ArrayOfVehicleFeatures" /></message><message name="getVehicleKindsRequest">  <part name="category" type="xsd:string" />  <part name="webapi-key" type="xsd:string" /></message><message name="getVehicleKindsResponse">  <part name="kind-list" type="tns:ArrayOfVehicleCategories" /></message><message name="getVersionsRequest">  <part name="make-id" type="xsd:int" />  <part name="model-id" type="xsd:int" />  <part name="webapi-key" type="xsd:string" />  <part name="country-code" type="xsd:string" />  <part name="type" type="xsd:string" /></message><message name="getVersionsResponse">  <part name="version-list" type="tns:ArrayOfVersions" /></message><portType name="otoMotoWebApiPortType">  <operation name="doCounterDelete">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doCounterDelete&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;remove visit counter&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by login method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - OK if success&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doCounterDeleteRequest"/>    <output message="tns:doCounterDeleteResponse"/>  </operation>  <operation name="doDataStorage">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doDataStorage&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      Perform saving data&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt;&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;e-mail&lt;/tt&gt; - e-mail address&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;name&lt;/tt&gt; - name&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;surname&lt;/tt&gt; - surname&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;result&lt;/i&gt; - OK if success&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_EMAIL_ADDRESS_INVALID&lt;/i&gt; - E-mail addres is invalid (factor: e-mail addres is invalid)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NAME_AND_SURNAME_EMPTY&lt;/i&gt; - Name and surname cannot be empty (factor: name and surname cannot be empty)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doDataStorageRequest"/>    <output message="tns:doDataStorageResponse"/>  </operation>  <operation name="doDealerInsertionActivate">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doDealerInsertionActivate&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;activate dealer's insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;expiration-date&lt;/i&gt; - insertion's expiration date&lt;/li&gt;  &lt;li&gt;&lt;i&gt;modification-datetime&lt;/i&gt; - modification datetime&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_TYPE&lt;/i&gt; - Typ pojazdu nie jest już obsługiwany. Prosimy o edycję lub ponowne utworzenie ogłoszenia z poprawnym typem pojazdu. (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doDealerInsertionActivateRequest"/>    <output message="tns:doDealerInsertionActivateResponse"/>  </operation>  <operation name="doDealerInsertionInactivate">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doDealerInsertionInactivate&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;inactivate dealer's insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALREADY_INACTIVE&lt;/b&gt; - insertion is already inactive&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;remove-date&lt;/i&gt; - insertion's remove date&lt;/li&gt;  &lt;li&gt;&lt;i&gt;modification-datetime&lt;/i&gt; - modification datetime&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doDealerInsertionInactivateRequest"/>    <output message="tns:doDealerInsertionInactivateResponse"/>  </operation>  <operation name="doDealerLogin">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doDealerLogin&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;    Perform Dealer login to otoMoto website&lt;br&gt;&lt;br&gt;    &lt;u&gt;Parameters:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;dealer-login&lt;/tt&gt; - dealer login&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;dealer-password&lt;/tt&gt; - dealer password&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;country-code&lt;/tt&gt; - country code&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;/ul&gt;    &lt;hr size=2 noshade&gt;    &lt;u&gt;Results:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;i&gt;session-id&lt;/i&gt; - assigned session ID&lt;/li&gt;    &lt;li&gt;&lt;i&gt;dealer&lt;/i&gt; - dealer&lt;/li&gt;    &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_LOGIN&lt;/i&gt; - login required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PASSWORD&lt;/i&gt; - password required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_COUNTRY_CODE&lt;/i&gt; - invalid country code ID (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER_FOR_LOGIN&lt;/i&gt; - webapi key is not valid for this user (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_TIME_BLOCKADE&lt;/i&gt; - Third incorrect login attempt. Your account was blocked for 15 minutes. (factor: Third incorrect login attempt. Your account was blocked for 15 minutes.)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doDealerLoginRequest"/>    <output message="tns:doDealerLoginResponse"/>  </operation>  <operation name="doDealerLogout">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doDealerLogout&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;perform dealer logout&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;result&lt;/i&gt; - result string: OK&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doDealerLogoutRequest"/>    <output message="tns:doDealerLogoutResponse"/>  </operation>  <operation name="doDealerSearch">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doDealerSearch&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      Search otomoto dealers&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt;&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;limit&lt;/tt&gt; - desired amount of results&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;page&lt;/tt&gt; - number of page of results&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;name&lt;/tt&gt; - dealer's name&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;country&lt;/tt&gt;&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;province&lt;/tt&gt;&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;city&lt;/tt&gt;&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;results-list&lt;/i&gt; - list of dealers&lt;/li&gt;      &lt;li&gt;&lt;i&gt;results-count&lt;/i&gt; - amount of search results&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doDealerSearchRequest"/>    <output message="tns:doDealerSearchResponse"/>  </operation>  <operation name="doExport">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doExport&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;export waiting insertions to Partner&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;partner-id&lt;/tt&gt; - Parner ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;partner-password&lt;/tt&gt; - Partner password&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;order-type&lt;/tt&gt; - Order type (Default: ALL)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;export-info-list&lt;/i&gt; - list of ExportInfo-s&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PARTNER_ID&lt;/i&gt; - partner ID required (factor: export failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doExportRequest"/>    <output message="tns:doExportResponse"/>  </operation>  <operation name="doExportAck">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doExportAck&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;acknowledge exported insertions from Partner&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;partner-id&lt;/tt&gt; - Parner ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;partner-password&lt;/tt&gt; - Partner password&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;export-info-list&lt;/tt&gt; - list of ExportInfo-s&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt; &lt;li&gt;&lt;b&gt;ERROR&lt;/b&gt; - internal error, unable to process method call.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PARTNER_ID&lt;/i&gt; - partner ID required (factor: export failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_EXPORT_ACK_INFO&lt;/i&gt; - ExportAckInfo required (factor: export ack failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doExportAckRequest"/>    <output message="tns:doExportAckResponse"/>  </operation>  <operation name="doHello">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doHello&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;Command for testing purposes only&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;test-hello-string&lt;/tt&gt; - test string (eg. name)&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;return-string&lt;/i&gt; Hello string &lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doHelloRequest"/>    <output message="tns:doHelloResponse"/>  </operation>  <operation name="doInsertionDelete">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionDelete&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;remove insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by login method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - OK if success&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionDeleteRequest"/>    <output message="tns:doInsertionDeleteResponse"/>  </operation>  <operation name="doInsertionEdit">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionEdit&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;    add new, or change existing insertion&lt;br&gt;&lt;br&gt;    &lt;u&gt;Parameters:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion data&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doInsertionLogin/doDealerLogin method (for change)&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;/ul&gt;    &lt;hr size=2 noshade&gt;    &lt;u&gt;Results:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;br&gt;      &lt;ul&gt;       &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt;       &lt;li&gt;&lt;b&gt;FORM_ERROR&lt;/b&gt; - invalid, or incomplete parameters. &lt;/li&gt;      &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;&lt;i&gt;error-list&lt;/i&gt; - list of form errors (if FORM_ERROR status is set)&lt;/li&gt;      &lt;li&gt;&lt;i&gt;insertion&lt;/i&gt; - recent insertion object&lt;/li&gt;    &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_MAKE_ID&lt;/i&gt; - invalid make ID (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_VEHICLE_TYPE&lt;/i&gt; - vehicle type required (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_UPDATE_FAILED&lt;/i&gt; - insertion update failed (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_KIND&lt;/i&gt; - invalid vehicle kind (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionEditRequest"/>    <output message="tns:doInsertionEditResponse"/>  </operation>  <operation name="doInsertionLogin">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionLogin&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;perform login to insertion in order to edit/change. Method should be used only for non-dealer insertions.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;user-email&lt;/tt&gt; - user email (insertion login)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;password&lt;/tt&gt; - password to insertion&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;session-id&lt;/i&gt; - assigned session ID&lt;/li&gt;  &lt;li&gt;&lt;i&gt;insertion&lt;/i&gt; - insertion&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_LOGIN&lt;/i&gt; - login required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PASSWORD&lt;/i&gt; - password required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_COUNTRY_CODE&lt;/i&gt; - invalid country code ID (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_BLOCKED&lt;/i&gt; - insertion was administratively blocked (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INTERNAL_ERROR&lt;/i&gt; - internal error (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionLoginRequest"/>    <output message="tns:doInsertionLoginResponse"/>  </operation>  <operation name="doInsertionLogout">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionLogout&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      perform logout from insertion&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;result&lt;/i&gt; - result string: OK&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionLogoutRequest"/>    <output message="tns:doInsertionLogoutResponse"/>  </operation>  <operation name="doInsertionSearch">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionSearch&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      Send insertion search request to otoMoto website&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - insertion type; valid values:        &lt;ul&gt;          &lt;li&gt;CAR - passanger cars&lt;/li&gt;          &lt;li&gt;MOTORBIKE - motorcycles&lt;/li&gt;          &lt;li&gt;TRUCK - trucks and utility vehicles&lt;/li&gt;          &lt;li&gt;CONSTRUCTION - build machines&lt;/li&gt;          &lt;li&gt;PART - parts&lt;/li&gt;          &lt;li&gt;FORKLIFT - forklift trucks&lt;/li&gt;          &lt;li&gt;AGRO - agricultural machines&lt;/li&gt;          &lt;li&gt;WATER - floating equipment&lt;/li&gt;          &lt;li&gt;AIR - flying equipment&lt;/li&gt;          &lt;li&gt;QUAD - quads&lt;/li&gt;          &lt;li&gt;MOTO-BIKE - moto-bikes&lt;/li&gt;          &lt;li&gt;SCOOTER - scooters&lt;/li&gt;          &lt;li&gt;SNOW - snow vehicles&lt;/li&gt;          &lt;li&gt;BIKE - bicycles&lt;/li&gt;          &lt;li&gt;OTHER - other vehicles&lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;&lt;tt&gt;make-model-phrase&lt;/tt&gt; - search make and model phrase (eg. &quot;Opel Astra&quot;) - &lt;i&gt;NOT IMPLEMENTED&lt;/i&gt;&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;make-id&lt;/tt&gt; - make ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;model-name&lt;/tt&gt; - model phrase&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;price-from&lt;/tt&gt; - vehicle price from&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;price-to&lt;/tt&gt; - vehicle price to&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;price-currency&lt;/tt&gt; - price currency&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;build-year-from&lt;/tt&gt; - vehicle build year from&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;build-year-to&lt;/tt&gt; - vehicle build year to&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;odometer-from&lt;/tt&gt; - vehicle odometer from&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;odometer-to&lt;/tt&gt; - vehicle odometer to&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;fuel-type-key&lt;/tt&gt; - type of fuel (engine)&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;country-id&lt;/tt&gt; - seller country ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;province-id&lt;/tt&gt; - seller province ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;city-name&lt;/tt&gt; - seller city name&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;vehicle-category-key&lt;/tt&gt; - vehicle category - allowed for type = CAR, MOTORBIKE, TRUCK, CONSTRUCTION.        Valid values for this param are returned by method getVehicleCategories().&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;order-by&lt;/tt&gt; - results order; valid values and sorting orders:        &lt;ul&gt;          &lt;li&gt;i - insertion creation date, descending, default sorting order&lt;/li&gt;          &lt;li&gt;p - price&lt;/li&gt;          &lt;li&gt;b - vehicle build year&lt;/li&gt;          &lt;li&gt;n - vehicle model name&lt;/li&gt;          &lt;li&gt;m - first registration date&lt;/li&gt;          &lt;li&gt;o - odometer&lt;/li&gt;          &lt;li&gt;w - engine power&lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;only-promoted&lt;/tt&gt; - return only promoted insertions&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;model-id&lt;/tt&gt; - model id - use getModels() to fetch model list&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;dealer-id&lt;/tt&gt; - return only ads of this dealer&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;part-kind-vehicle&lt;/tt&gt; - kind of vehicle for part e.g. car&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;part-category-id&lt;/tt&gt; - category of parts e.g. accessories&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;sort&lt;/tt&gt; - sorting:        &lt;ul&gt;          &lt;li&gt;asc - asceding sorting&lt;/li&gt;          &lt;li&gt;desc - descending sorting&lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;&lt;tt&gt;extras-list&lt;/tt&gt; - list of extras&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;features-list&lt;/tt&gt; - list of features&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;cubic-capacity-from&lt;/tt&gt; - vehicle cubic capacity from&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;cubic-capacity-to&lt;/tt&gt; - vehicle cubic capacity to&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;gearbox&lt;/tt&gt; - type of vehicle gearbox&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;doors&lt;/tt&gt; - type of vehicle door&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;colour&lt;/tt&gt; - colour of vehicle&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;metallic&lt;/tt&gt; - is colour metallic&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;origin-country&lt;/tt&gt; - country of vehicle origin&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;registration-country&lt;/tt&gt; - country of vehicle registration&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;search-query-id&lt;/i&gt; - query ID&lt;/li&gt;      &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - search status:        &lt;ul&gt;         &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - there are results&lt;/li&gt;          &lt;li&gt;&lt;b&gt;NO_RESULTS&lt;/b&gt; - no results were found&lt;/li&gt;          &lt;li&gt;&lt;b&gt;TOO_MANY&lt;/b&gt; - too many results&lt;/li&gt;         &lt;li&gt;&lt;b&gt;FORM_ERROR&lt;/b&gt; - invalid, or incomplete parameters. &lt;/li&gt;        &lt;/ul&gt;        &lt;/li&gt;      &lt;li&gt;&lt;i&gt;results-no&lt;/i&gt; - number of results&lt;/li&gt;        &lt;li&gt;&lt;i&gt;error-list&lt;/i&gt; - list of form errors (if FORM_ERROR status is set)&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_TYPE&lt;/i&gt; - insertion type required (factor: search failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionSearchRequest"/>    <output message="tns:doInsertionSearchResponse"/>  </operation>  <operation name="doInsertionTransfer">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionTransfer&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;partner-id&lt;/tt&gt; - Parner ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;partner-passwd&lt;/tt&gt; - Partner password&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;list&lt;/i&gt; - recent transferUnits array&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PARTNER_ID&lt;/i&gt; - partner ID required (factor: export failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionTransferRequest"/>    <output message="tns:doInsertionTransferResponse"/>  </operation>  <operation name="doInsertionTransferAck">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doInsertionTransferAck&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;acknowledge transfer units from Partner&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;partner-id&lt;/tt&gt; - Parner ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;partner-passwd&lt;/tt&gt; - Partner password&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;transfer-unit-list&lt;/tt&gt; - list of TransferUnit-s&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt; &lt;li&gt;&lt;b&gt;ERROR&lt;/b&gt; - internal error, unable to process method call.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PARTNER_ID&lt;/i&gt; - partner ID required (factor: export failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_TRANSFERUNITS_ACK_INFO&lt;/i&gt; - TransferUnitsAckInfo required (factor: transferunits ack failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doInsertionTransferAckRequest"/>    <output message="tns:doInsertionTransferAckResponse"/>  </operation>  <operation name="doPartnerInsertionActivate">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPartnerInsertionActivate&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;activate partner's insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;expiration-date&lt;/i&gt; - insertion's expiration date&lt;/li&gt;  &lt;li&gt;&lt;i&gt;modification-datetime&lt;/i&gt; - modification datetime&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPartnerInsertionActivateRequest"/>    <output message="tns:doPartnerInsertionActivateResponse"/>  </operation>  <operation name="doPartnerInsertionInactivate">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPartnerInsertionInactivate&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;inactivate partner's insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doPartnerLogin method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALREADY_INACTIVE&lt;/b&gt; - insertion is already inactive&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;remove-date&lt;/i&gt; - insertion's remove date&lt;/li&gt;  &lt;li&gt;&lt;i&gt;modification-datetime&lt;/i&gt; - modification datetime&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPartnerInsertionInactivateRequest"/>    <output message="tns:doPartnerInsertionInactivateResponse"/>  </operation>  <operation name="doPartnerLogin">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPartnerLogin&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;  Perform Partner login to otoMoto website&lt;br&gt;&lt;br&gt;  &lt;u&gt;Parameters:&lt;/u&gt;  &lt;ul&gt;  &lt;li&gt;&lt;tt&gt;partner-login&lt;/tt&gt; - partner login&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;partner-password&lt;/tt&gt; - partner password&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;country-code&lt;/tt&gt; - country code&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;  &lt;/ul&gt;  &lt;hr size=2 noshade&gt;  &lt;u&gt;Results:&lt;/u&gt;  &lt;ul&gt;  &lt;li&gt;&lt;i&gt;session-id&lt;/i&gt; - assigned session ID&lt;/li&gt;  &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_LOGIN&lt;/i&gt; - login required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PASSWORD&lt;/i&gt; - password required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_COUNTRY_CODE&lt;/i&gt; - invalid country code ID (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INCORRECT_AUTH_DATA&lt;/i&gt; - incorrect authorization data (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER_FOR_LOGIN&lt;/i&gt; - webapi key is not valid for this user (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_TIME_BLOCKADE&lt;/i&gt; - Third incorrect login attempt. Your account was blocked for 15 minutes. (factor: Third incorrect login attempt. Your account was blocked for 15 minutes.)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPartnerLoginRequest"/>    <output message="tns:doPartnerLoginResponse"/>  </operation>  <operation name="doPartnerLogout">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPartnerLogout&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;perform partner logout&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;result&lt;/i&gt; - result string: OK&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPartnerLogoutRequest"/>    <output message="tns:doPartnerLogoutResponse"/>  </operation>  <operation name="doPhotoDelete">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPhotoDelete&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      Delete last existing insertion photo&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;insertion-id&lt;/tt&gt; - insertion ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doInsertionLogin/doDealerLogin/doPartnerLogin method&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;photo-no&lt;/i&gt; - number of deleted photo (0 if there's no photos to delete)&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPhotoDeleteRequest"/>    <output message="tns:doPhotoDeleteResponse"/>  </operation>  <operation name="doPhotoEdit">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPhotoEdit&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      Add new or change existing insertion photo&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;insertion-id&lt;/tt&gt; - insertion ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;photo&lt;/tt&gt; - photo&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doInsertionLogin/doDealerLogin/doPartnerLogin method&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;photo-no&lt;/i&gt; - added/changed photo number&lt;/li&gt;      &lt;li&gt;&lt;i&gt;insertion-modification-datetime&lt;/i&gt; - modification datetime for insertion&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PHOTO&lt;/i&gt; - photo required (factor: photo edit failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_WRITE_PHOTO_FAILED&lt;/i&gt; - unable to write photo file (internal error) (factor: photo edit failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_FILE_TOO_LARGE&lt;/i&gt; - photo file too large (factor: photo edit failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_FILE_FORMAT&lt;/i&gt; - photo file is in invalid format (factor: photo edit failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPhotoEditRequest"/>    <output message="tns:doPhotoEditResponse"/>  </operation>  <operation name="doPrivateInsertionAdd">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doPrivateInsertionAdd&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;   add new private ad&lt;br&gt;&lt;br&gt;   &lt;u&gt;Parameters:&lt;/u&gt;   &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion data&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;   &lt;/ul&gt;   &lt;hr size=2 noshade&gt;   &lt;u&gt;Results:&lt;/u&gt;   &lt;ul&gt;    &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;br&gt;     &lt;ul&gt;      &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt;      &lt;li&gt;&lt;b&gt;FORM_ERROR&lt;/b&gt; - invalid, or incomplete parameters. &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;i&gt;ad-password&lt;/i&gt; - password for ad&lt;br&gt;    &lt;li&gt;&lt;i&gt;error-list&lt;/i&gt; - list of form errors (if FORM_ERROR status is set)&lt;/li&gt;    &lt;li&gt;&lt;i&gt;insertion&lt;/i&gt; - recent insertion object&lt;/li&gt;   &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_MAKE_ID&lt;/i&gt; - invalid make ID (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_VEHICLE_TYPE&lt;/i&gt; - vehicle type required (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_KIND&lt;/i&gt; - invalid vehicle kind (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PERMITION&lt;/i&gt; - No permition to run this method (factor: no permition)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_EMAIL_ADDRESS_MISSING&lt;/i&gt; - E-mail address is required (factor: e-mail addres is missing)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_ATTEMPT_TO_PASS_ID&lt;/i&gt; - Passing insertion[id] param is not allowed in this method. (factor: insertion id not allowed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_ATTEMPT_TO_PASS_REMOTE_ID&lt;/i&gt; - Passing insertion[remote-id] param is not allowed in this method. (factor: remote id not allowed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doPrivateInsertionAddRequest"/>    <output message="tns:doPrivateInsertionAddResponse"/>  </operation>  <operation name="doSendContactForm">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doSendContactForm&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      Send insertion search request to otoMoto website&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;       &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key &lt;/li&gt;       &lt;li&gt;&lt;tt&gt;insertion-number&lt;/tt&gt; - number of Insertion &lt;/li&gt;       &lt;li&gt;&lt;tt&gt;name&lt;/tt&gt; - form field: name&lt;/li&gt;       &lt;li&gt;&lt;tt&gt;email&lt;/tt&gt; - form field: email&lt;/li&gt;       &lt;li&gt;&lt;tt&gt;phone&lt;/tt&gt; - form field: phone&lt;/li&gt;       &lt;li&gt;&lt;tt&gt;comment&lt;/tt&gt; - form field: comment&lt;/li&gt;       &lt;li&gt;&lt;tt&gt;captha-code&lt;/tt&gt; - code typed in by the user from captcha (use getCaptcha to display)&lt;/li&gt;       &lt;li&gt;&lt;tt&gt;user-session-id&lt;/tt&gt; - user session ID, same as used in getCaptcha method.&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;        &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - search status:          &lt;ul&gt;            &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - there are results&lt;/li&gt;            &lt;li&gt;&lt;b&gt;FORM_ERROR&lt;/b&gt; - invalid, or incomplete parameters. &lt;/li&gt;          &lt;/ul&gt;        &lt;/li&gt;        &lt;li&gt;&lt;i&gt;error-list&lt;/i&gt; - list of form errors (if FORM_ERROR status is set)&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doSendContactFormRequest"/>    <output message="tns:doSendContactFormResponse"/>  </operation>  <operation name="doValuationResponse">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;doValuationResponse&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;      &lt;i&gt;restricted method&lt;/i&gt;      &lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;advID&lt;/tt&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;valuationLink&lt;/tt&gt;&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;signature&lt;/tt&gt;&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - operation result:&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - success&lt;/li&gt;         &lt;li&gt;&lt;b&gt;ERROR:1&lt;/b&gt; - bad signature&lt;/li&gt;         &lt;li&gt;&lt;b&gt;ERROR:2&lt;/b&gt; - bad advID&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:doValuationResponseRequest"/>    <output message="tns:doValuationResponseResponse"/>  </operation>  <operation name="getAgroDictionary">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getAgroDictionary&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available values for specified attribute.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;tt&gt;attribute-name&lt;/tt&gt; - attribute name, if null list of available attributes name will be return&lt;/li&gt;&lt;li&gt;&lt;tt&gt;category&lt;/tt&gt; - for attribute-name = 'otherinfos', 'type', 'subtype1', 'subtype2' or 'subtype3'&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - for attribute-name = 'otherinfos', 'subtype1', 'subtype2' or 'subtype3'&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;subtype1&lt;/tt&gt; - for attribute-name = 'otherinfos', 'subtype2' or 'subtype3'&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;subtype2&lt;/tt&gt; - for attribute-name = 'otherinfos' or 'subtype3'&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;subtype3&lt;/tt&gt; - for attribute-name = 'otherinfos'&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=&quot;2&quot; noshade=&quot;noshade&quot;&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;dictionary-type-list&lt;/i&gt; - list of available values&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getAgroDictionaryRequest"/>    <output message="tns:getAgroDictionaryResponse"/>  </operation>  <operation name="getAllegroCategories">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getAllegroCategories&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      get list of Allegro's categories.&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;category-list&lt;/i&gt; - list of categories&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getAllegroCategoriesRequest"/>    <output message="tns:getAllegroCategoriesResponse"/>  </operation>  <operation name="getAllowedCurrencies">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getAllowedCurrencies&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;    get list of available currencies.&lt;br&gt;&lt;br&gt;    &lt;u&gt;Parameters:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;/ul&gt;    &lt;hr size=2 noshade&gt;    &lt;u&gt;Results:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;i&gt;currencies-list&lt;/i&gt; - list of currencies&lt;/li&gt;    &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getAllowedCurrenciesRequest"/>    <output message="tns:getAllowedCurrenciesResponse"/>  </operation>  <operation name="getArticleCategories">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getArticleCategories&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available vehicle makes.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;cobrand_id&lt;/tt&gt; - allows to fetch news dedicated to other than default cobrand, default:0&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;article-list&lt;/i&gt; - list of articles&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getArticleCategoriesRequest"/>    <output message="tns:getArticleCategoriesResponse"/>  </operation>  <operation name="getArticleList">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getArticleList&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of articles&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;category-id&lt;/tt&gt; - id of ArticleCategory&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;count&lt;/tt&gt; - desired lenght of the list, default: 5&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;cobrand_id&lt;/tt&gt; - allows to fetch Articles dedicated to other than default cobrand, default:0&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;article-list&lt;/i&gt; - list of Article&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getArticleListRequest"/>    <output message="tns:getArticleListResponse"/>  </operation>  <operation name="getArticlePhoto">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getArticlePhoto&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get photo attached to article&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;article-id&lt;/tt&gt; - article ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;photo-no&lt;/tt&gt; - photo number: starting from 1 (Default: 1)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;photo-size&lt;/tt&gt; - size of photo, can be one of the following values: (Default: MINI)&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;MINI&lt;/b&gt; - 60x45 pixels&lt;/li&gt; &lt;li&gt;&lt;b&gt;NORMAL&lt;/b&gt; - 300x225 pixels&lt;/li&gt; &lt;li&gt;&lt;b&gt;ORIGINAL&lt;/b&gt; - original size&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;result-type&lt;/tt&gt; - type of returned value:&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;LINK&lt;/b&gt; - URL&lt;/li&gt; &lt;li&gt;&lt;b&gt;FILE&lt;/b&gt; - binary file&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;photo&lt;/i&gt; - article photo&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_SIZE&lt;/i&gt; - photo size name is invalid (factor: get photo failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_RESULT_TYPE&lt;/i&gt; - photo result type is invalid (factor: get photo failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_NUMBER&lt;/i&gt; - photo number is invalid (factor: get photo failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getArticlePhotoRequest"/>    <output message="tns:getArticlePhotoResponse"/>  </operation>  <operation name="getCaptcha">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getCaptcha&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;  get Captha with number for selected resource-type  &lt;u&gt;Parameters:&lt;/u&gt;  &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;resource-type&lt;/tt&gt; - resource for which captcha is generated, can be one of the following values:&lt;br&gt;      &lt;ul&gt;        &lt;li&gt;VEHICLE&lt;/li&gt;      &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;tt&gt;resource-id&lt;/tt&gt; - insertion ID&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;user-session-id&lt;/tt&gt; - user session ID, can be encoded by md5 method. It's recomended. See webApi method: doSendContactForm()&lt;/li&gt;  &lt;/ul&gt;  &lt;hr size=2 noshade&gt;  &lt;u&gt;Results:&lt;/u&gt;  &lt;ul&gt;    &lt;li&gt;&lt;i&gt;captcha image&lt;/i&gt; - base64 encoded image&lt;/li&gt;  &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_RESOURCE_TYPE&lt;/i&gt; - resource type invalid (factor: search failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_RESOURCE_ID_MISSING&lt;/i&gt; - resource-id is missing (factor: search failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getCaptchaRequest"/>    <output message="tns:getCaptchaResponse"/>  </operation>  <operation name="getColours">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getColours&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available vehicle colours.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;colours-list&lt;/i&gt; - list of colours&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getColoursRequest"/>    <output message="tns:getColoursResponse"/>  </operation>  <operation name="getConstructionDictionary">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getConstructionDictionary&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available values for specified attribute.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;tt&gt;attribute-name&lt;/tt&gt; - attribute name, if null list of available attributes name will be return&lt;/li&gt;  &lt;ul&gt;    &lt;li&gt;&lt;b&gt;category&lt;/b&gt; - categories of build machines&lt;/li&gt;    &lt;li&gt;&lt;b&gt;type&lt;/b&gt; - types of build machines in selected category; requires second parameter - category&lt;/li&gt;    &lt;li&gt;&lt;b&gt;drive-kind&lt;/b&gt; - possible drive kinds for build machines&lt;/li&gt;    &lt;li&gt;&lt;b&gt;boom&lt;/b&gt; - possible boom kinds for build machines&lt;/li&gt;    &lt;li&gt;&lt;b&gt;gearbox-type-key&lt;/b&gt; - possible gear box types for build machines&lt;/li&gt;    &lt;li&gt;&lt;b&gt;blade&lt;/b&gt; - possible blade types for build machines&lt;/li&gt;  &lt;/ul&gt;&lt;li&gt;&lt;tt&gt;category&lt;/tt&gt; - used to specify group of types (only for attribute-name = 'type')&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=&quot;2&quot; noshade=&quot;noshade&quot;&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;dictionary-type-list&lt;/i&gt; - list of available values&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getConstructionDictionaryRequest"/>    <output message="tns:getConstructionDictionaryResponse"/>  </operation>  <operation name="getCountries">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getCountries&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available countries.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;country-list&lt;/i&gt; - list of countries&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getCountriesRequest"/>    <output message="tns:getCountriesResponse"/>  </operation>  <operation name="getDealerInsertions">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getDealerInsertions&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of dealer's insertions.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - type of result:&lt;ul&gt; &lt;li&gt;&lt;b&gt;ACTIVE&lt;/b&gt; - active insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;INACTIVE&lt;/b&gt; - inactive insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALL&lt;/b&gt; - all active and inactive insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALL_SHORTENED&lt;/b&gt; - all active and inactive insertions, butInsertion objects on &lt;i&gt;insertions-list&lt;/i&gt; contains only: &lt;i&gt;id, remote-id, status, views-num, modifuaction-datetime, make-id, make-name&lt;/i&gt; and &lt;i&gt;model-name.&lt;/i&gt;This type of results can be usefull eg. for syncing purposes.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - result status:&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - results returned&lt;/li&gt; &lt;li&gt;&lt;b&gt;NO_RESULTS&lt;/b&gt; - no insertions were found&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;i&gt;insertions-list&lt;/i&gt; - list of insertions&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getDealerInsertionsRequest"/>    <output message="tns:getDealerInsertionsResponse"/>  </operation>  <operation name="getFuelTypes">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getFuelTypes&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available fuel (engine) types.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;li&gt;&lt;tt&gt;object-type&lt;/tt&gt; - object type (Default: car)&lt;br&gt;    &lt;ul&gt;            &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt;            &lt;li&gt;&lt;b&gt;TRUCK&lt;/b&gt; - trucks and utility vehicles&lt;/li&gt;            &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt;            &lt;li&gt;&lt;b&gt;OTHER&lt;/b&gt; - other vehicles&lt;/li&gt;          &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;fuel-type-list&lt;/i&gt; - list of fuel types&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: listing failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getFuelTypesRequest"/>    <output message="tns:getFuelTypesResponse"/>  </operation>  <operation name="getGearBoxTypes">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getGearBoxTypes&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available gear box types.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;gear-box-type-list&lt;/i&gt; - list of gear box types&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getGearBoxTypesRequest"/>    <output message="tns:getGearBoxTypesResponse"/>  </operation>  <operation name="getInsertion">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getInsertion&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method (optional)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;insertion&lt;/i&gt; - insertion object&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getInsertionRequest"/>    <output message="tns:getInsertionResponse"/>  </operation>  <operation name="getInsertionPhoto">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getInsertionPhoto&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get photo attached to insertion&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion-id&lt;/tt&gt; - insertion ID&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;photo-no&lt;/tt&gt; - photo number: starting from 1 (Default: 1)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;photo-size&lt;/tt&gt; - size of photo, can be one of the following values: (Default: MINI)&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;MINI&lt;/b&gt; - 64x48 pixels&lt;/li&gt; &lt;li&gt;&lt;b&gt;NORMAL&lt;/b&gt; - 400x300 pixels&lt;/li&gt; &lt;li&gt;&lt;b&gt;ORIGINAL&lt;/b&gt; - original size&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;result-type&lt;/tt&gt; - type of returned value:&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;LINK&lt;/b&gt; - URL&lt;/li&gt; &lt;li&gt;&lt;b&gt;FILE&lt;/b&gt; - binary file&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;photo&lt;/i&gt; - insertion photo&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_SIZE&lt;/i&gt; - photo size name is invalid (factor: get photo failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_RESULT_TYPE&lt;/i&gt; - photo result type is invalid (factor: get photo failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_NUMBER&lt;/i&gt; - photo number is invalid (factor: get photo failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getInsertionPhotoRequest"/>    <output message="tns:getInsertionPhotoResponse"/>  </operation>  <operation name="getInsertionSearchResults">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getInsertionSearchResults&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      get search results returned by doInsertionSearch method&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;search-query-id&lt;/tt&gt; - query ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;start-pos&lt;/tt&gt; - results list start position&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;results-limit&lt;/tt&gt; - max. number of results which may be returned&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;only-promoted&lt;/tt&gt; - return only promoted insertions&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;results-list&lt;/i&gt; - list of insertions&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SEARCH_QUERY_ID&lt;/i&gt; - search query ID required (factor: search failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SEARCH_QUERY_ID&lt;/i&gt; - search query ID is invalid (factor: search failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getInsertionSearchResultsRequest"/>    <output message="tns:getInsertionSearchResultsResponse"/>  </operation>  <operation name="getMainPageInsertion">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getMainPageInsertion&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      get insertion&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;        &lt;li&gt;&lt;i&gt;insertion&lt;/i&gt; - insertion object&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getMainPageInsertionRequest"/>    <output message="tns:getMainPageInsertionResponse"/>  </operation>  <operation name="getMakes">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getMakes&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available vehicle makes.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: CAR):&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt; &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt; &lt;li&gt;&lt;b&gt;TRUCK&lt;/b&gt; - trucks and utility vehicles&lt;/li&gt; &lt;li&gt;&lt;b&gt;FORKLIFT&lt;/b&gt; - forklift trucks&lt;/li&gt; &lt;li&gt;&lt;b&gt;BIKE&lt;/b&gt; - bikes&lt;/li&gt; &lt;li&gt;&lt;b&gt;CONSTRUCTION&lt;/b&gt; - construction (build) machines&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;group&lt;/tt&gt; - for 'TRUCK' only, group type of trucks make (value returned by method: getVehicleCategories() )&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;make-list&lt;/i&gt; - list of makes&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getMakesRequest"/>    <output message="tns:getMakesResponse"/>  </operation>  <operation name="getModels">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getModels&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available car or motorcycle models.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;make-id&lt;/tt&gt; - Car or Motorcycle Make id&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: CAR):&lt;br&gt;        &lt;ul&gt;         &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt;         &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;model-list&lt;/i&gt; - list of approved mmodels&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_MAKE&lt;/i&gt; - invalid make (factor: make failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: listing failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getModelsRequest"/>    <output message="tns:getModelsResponse"/>  </operation>  <operation name="getNewsList">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getNewsList&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available news.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;cobrand_id&lt;/tt&gt; - allows to fetch news dedicated to other than default cobrand, default:0&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;news-list&lt;/i&gt; - list of news&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getNewsListRequest"/>    <output message="tns:getNewsListResponse"/>  </operation>  <operation name="getNewsPhoto">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getNewsPhoto&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      get photo attached to news&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;news-id&lt;/tt&gt; - news ID&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;photo-no&lt;/tt&gt; - photo number: 1-6 (Default: 1)&lt;/li&gt;                &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;        &lt;li&gt;&lt;tt&gt;photo-size&lt;/tt&gt; - size of photo, can be one of the following values: (Default: MINI)&lt;br&gt;        &lt;ul&gt;         &lt;li&gt;&lt;b&gt;MINI&lt;/b&gt; - 180x180 pixels&lt;/li&gt;         &lt;li&gt;&lt;b&gt;NORMAL&lt;/b&gt; - 580x pixels&lt;/li&gt;         &lt;li&gt;&lt;b&gt;ORIGINAL&lt;/b&gt; - original size&lt;/li&gt;        &lt;/ul&gt;        &lt;/li&gt;        &lt;li&gt;&lt;tt&gt;result-type&lt;/tt&gt; - type of returned value:&lt;br&gt;        &lt;ul&gt;         &lt;li&gt;&lt;b&gt;LINK&lt;/b&gt; - URL&lt;/li&gt;         &lt;li&gt;&lt;b&gt;FILE&lt;/b&gt; - binary file&lt;/li&gt;        &lt;/ul&gt;               &lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;photo&lt;/i&gt; - news photo&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_SIZE&lt;/i&gt; - photo size name is invalid (factor: get photo failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_RESULT_TYPE&lt;/i&gt; - photo result type is invalid (factor: get photo failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_PHOTO_NUMBER&lt;/i&gt; - photo number is invalid (factor: get photo failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getNewsPhotoRequest"/>    <output message="tns:getNewsPhotoResponse"/>  </operation>  <operation name="getPartCategories">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getPartCategories&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available part categories&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;kind&lt;/tt&gt; - vehicle kind (default: CAR):&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt; &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt; &lt;li&gt;&lt;b&gt;TRUCK&lt;/b&gt; - trucks and utility vehicles&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;part-categories-list&lt;/i&gt; - list of part categories&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_KIND&lt;/i&gt; - invalid vehicle kind (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getPartCategoriesRequest"/>    <output message="tns:getPartCategoriesResponse"/>  </operation>  <operation name="getPartnerInsertions">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getPartnerInsertions&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of partner insertions.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - type of result:&lt;ul&gt; &lt;li&gt;&lt;b&gt;ACTIVE&lt;/b&gt; - active insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;INACTIVE&lt;/b&gt; - inactive insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALL&lt;/b&gt; - all active and inactive insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALL_SHORTENED&lt;/b&gt; - all active and inactive insertions, butInsertion objects on &lt;i&gt;insertions-list&lt;/i&gt; contains only: &lt;i&gt;id, remote-id, status, views-num, modifuaction-datetime, make-id, make-name&lt;/i&gt; and &lt;i&gt;model-name.&lt;/i&gt;This type of results can be usefull eg. for syncing purposes.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doPartnerLogin method&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;limit&lt;/tt&gt; - limit&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;offset&lt;/tt&gt; - offset&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - result status:&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - results returned&lt;/li&gt; &lt;li&gt;&lt;b&gt;NO_RESULTS&lt;/b&gt; - no insertions were found&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;i&gt;insertions-list&lt;/i&gt; - list of insertions&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getPartnerInsertionsRequest"/>    <output message="tns:getPartnerInsertionsResponse"/>  </operation>  <operation name="getPartnerInsertionsNumber">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getPartnerInsertions&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of partner insertions.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - type of result:&lt;ul&gt; &lt;li&gt;&lt;b&gt;ACTIVE&lt;/b&gt; - active insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;INACTIVE&lt;/b&gt; - inactive insertions&lt;/li&gt; &lt;li&gt;&lt;b&gt;ALL&lt;/b&gt; - all active and inactive insertions&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doPartnerLogin method&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;status&lt;/i&gt; - result status:&lt;ul&gt; &lt;li&gt;&lt;b&gt;OK&lt;/b&gt; - results returned&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;i&gt;number&lt;/i&gt; - number of insertions&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getPartnerInsertionsNumberRequest"/>    <output message="tns:getPartnerInsertionsNumberResponse"/>  </operation>  <operation name="getPrivateActivationCode">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getPrivateActivationCode&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;    get SMS code for private insertion activation&lt;br&gt;&lt;br&gt;   &lt;u&gt;Parameters:&lt;/u&gt;   &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;insertion-id&lt;/tt&gt; - insertion ID&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;   &lt;/ul&gt;   &lt;hr size=2 noshade&gt;   &lt;u&gt;Results:&lt;/u&gt;   &lt;ul&gt;    &lt;li&gt;&lt;i&gt;sms-code&lt;/i&gt; - sms code for payment&lt;br&gt;   &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SESSION_ID&lt;/i&gt; - session ID required (factor: login failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_ACCESS_DENIED&lt;/i&gt; - insertion belongs to another user (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_UPDATE_FAILED&lt;/i&gt; - insertion update failed (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_PERMITION&lt;/i&gt; - No permition to run this method (factor: no permition)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_ORDER_FAILED&lt;/i&gt; - Internal error, is a problem with creating the order transaction. (factor: transaction order failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_PAYMENT_FAILED&lt;/i&gt; - Internal error, is a problem with creating the payment. (factor: payment transaction failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_SMS_CODE_FAILED&lt;/i&gt; - Internal error, is a problem with creating the sms code. (factor: sms code failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getPrivateActivationCodeRequest"/>    <output message="tns:getPrivateActivationCodeResponse"/>  </operation>  <operation name="getPromotedInsertions">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getPromotedInsertions&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;      get promoted insertions&lt;br&gt;&lt;br&gt;      &lt;u&gt;Parameters:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;tt&gt;results-limit&lt;/tt&gt; - max. number of results to be returned&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;/ul&gt;      &lt;hr size=2 noshade&gt;      &lt;u&gt;Results:&lt;/u&gt;      &lt;ul&gt;      &lt;li&gt;&lt;i&gt;results-list&lt;/i&gt; - list of insertions&lt;/li&gt;      &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getPromotedInsertionsRequest"/>    <output message="tns:getPromotedInsertionsResponse"/>  </operation>  <operation name="getProvinces">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getProvinces&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available provinces for given country.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;country-id&lt;/tt&gt; - country ID (Default: PL)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;province-list&lt;/i&gt; - list of provinces&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_COUNTRY_ID&lt;/i&gt; - invalid country ID (factor: get result failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getProvincesRequest"/>    <output message="tns:getProvincesResponse"/>  </operation>  <operation name="getSearchItems">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getSearchItems&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get insertions&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;insertion&lt;/tt&gt; - insertion object, only 'id' or 'remote-id' is required&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;session-id&lt;/tt&gt; - session ID assigned by doDealerLogin method (optional)&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;insertion&lt;/i&gt; - insertion object&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getSearchItemsRequest"/>    <output message="tns:getSearchItemsResponse"/>  </operation>  <operation name="getSearchParams">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getSearchParams&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get search params&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;   &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - insertion type; valid values:        &lt;ul&gt;          &lt;li&gt;CAR - passanger cars&lt;/li&gt;          &lt;li&gt;TRUCK - trucks and utility vehicles&lt;/li&gt;          &lt;li&gt;AGRO - agricultural machines&lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;params&lt;/i&gt; - search params&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_INSERTION_ID&lt;/i&gt; - insertion ID required (factor: get result failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INSERTION_NOT_FOUND&lt;/i&gt; - insertion not found (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_SESSION_ID&lt;/i&gt; - invalid sesssion ID (factor: authorization failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getSearchParamsRequest"/>    <output message="tns:getSearchParamsResponse"/>  </operation>  <operation name="getSystemInfo">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getSystemInfo&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get information about current WebAPI module status&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;webapi-version&lt;/i&gt; - current otoMoto WebAPI version&lt;/li&gt;  &lt;li&gt;&lt;i&gt;vehicle-data-version&lt;/i&gt; - current version of all vehicle's data like Makes, Extras etc.&lt;/li&gt;  &lt;li&gt;&lt;i&gt;allegro-categories-version&lt;/i&gt; - current version of Allegro categories&lt;/li&gt;      &lt;li&gt;&lt;i&gt;models-version&lt;/i&gt; - current version of Car Models&lt;/li&gt;  &lt;li&gt;&lt;i&gt;motd-body&lt;/i&gt; - &quot;Message of the Day&quot; body&lt;/li&gt;  &lt;li&gt;&lt;i&gt;motd-link&lt;/i&gt; - &quot;Message of the Day&quot; link&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_NO_SYSTEM_INFO_FOR_GIVEN_WEBAPI_USER&lt;/i&gt; - there's no system information for given WebAPI user (factor: get result failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getSystemInfoRequest"/>    <output message="tns:getSystemInfoResponse"/>  </operation>  <operation name="getTestString">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getTestString&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;Generate and return string with specified size. This function is for testing and profiling only.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;string-size&lt;/tt&gt; - size of the string to generate in KB. Maximum value is 2000 (2MB). Minimum value is 0.&lt;/li&gt;&lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;  &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;return-string&lt;/i&gt; String with specified size&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getTestStringRequest"/>    <output message="tns:getTestStringResponse"/>  </operation>  <operation name="getTransmissionTypes">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getTransmissionTypes&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;    get list of available vehicle transmissions.&lt;br&gt;&lt;br&gt;    &lt;u&gt;Parameters:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: MOTORBIKE):&lt;br&gt;      &lt;ul&gt;        &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt;        &lt;li&gt;&lt;b&gt;WATER&lt;/b&gt; - floating equipment&lt;/li&gt;        &lt;li&gt;&lt;b&gt;QUAD&lt;/b&gt; - quads&lt;/li&gt;        &lt;li&gt;&lt;b&gt;CONSTRUCTION&lt;/b&gt; - construction vehicles&lt;/li&gt;      &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;/ul&gt;    &lt;hr size=2 noshade&gt;    &lt;u&gt;Results:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;i&gt;transmission-list&lt;/i&gt; - list of transmissions&lt;/li&gt;    &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getTransmissionTypesRequest"/>    <output message="tns:getTransmissionTypesResponse"/>  </operation>  <operation name="getUserInsertions">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getUserInsertions&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;  get ads added by Dealer/Partner  &lt;u&gt;Parameters:&lt;/u&gt;  &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;user-type&lt;/tt&gt; - type of the user Dealer / TransferSender (Partner)    &lt;li&gt;&lt;tt&gt;user-id&lt;/tt&gt; - user ID&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;limit&lt;/tt&gt; - amount of results per page&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;page&lt;/tt&gt; - no of page of results&lt;/li&gt;    &lt;li&gt;&lt;tt&gt;sort-by&lt;/tt&gt; - sorting field availble values are: &lt;br&gt;      &lt;ul&gt;        &lt;li&gt;exp_date&lt;/li&gt;        &lt;li&gt;views&lt;/li&gt;        &lt;li&gt;number&lt;/li&gt;        &lt;li&gt;price&lt;/li&gt;        &lt;li&gt;name&lt;/li&gt;        &lt;li&gt;type&lt;/li&gt;      &lt;/ul&gt;    &lt;/li&gt;    &lt;/li&gt;  &lt;/ul&gt;  &lt;hr size=2 noshade&gt;  &lt;u&gt;Results:&lt;/u&gt;  &lt;ul&gt;    &lt;li&gt;&lt;i&gt;results-list&lt;/i&gt; - list of insertions&lt;/li&gt;    &lt;li&gt;&lt;i&gt;results-count&lt;/i&gt; - number of results&lt;/li&gt;  &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_USER_NOT_FOUND&lt;/i&gt; - User not found (factor: search failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_USERTYPE_INVALI&lt;/i&gt; - Invalid user type (factor: search failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getUserInsertionsRequest"/>    <output message="tns:getUserInsertionsResponse"/>  </operation>  <operation name="getVehicleCategories">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getVehicleCategories&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available vehicle categories.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: CAR):&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt; &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt; &lt;li&gt;&lt;b&gt;TRUCK&lt;/b&gt; - trucks and utility vehicles&lt;/li&gt; &lt;li&gt;&lt;b&gt;FORKLIFT&lt;/b&gt; - forklift trucks&lt;/li&gt; &lt;li&gt;&lt;b&gt;WATER&lt;/b&gt; - floating equipment&lt;/li&gt; &lt;li&gt;&lt;b&gt;AIR&lt;/b&gt; - flying equipment&lt;/li&gt; &lt;li&gt;&lt;b&gt;CONSTRUCTION&lt;/b&gt; - construction equipment&lt;/li&gt; &lt;li&gt;&lt;b&gt;SNOW&lt;/b&gt; - snow equipment&lt;/li&gt; &lt;li&gt;&lt;b&gt;BIKE&lt;/b&gt; - bike equipment&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;category-list&lt;/i&gt; - list of categories&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getVehicleCategoriesRequest"/>    <output message="tns:getVehicleCategoriesResponse"/>  </operation>  <operation name="getVehicleExtras">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getVehicleExtras&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;    get list of available vehicle extras (eg. &quot;ABS&quot;, &quot;air conditioning&quot; etc.)&lt;br&gt;&lt;br&gt;    &lt;u&gt;Parameters:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: CAR):&lt;br&gt;      &lt;ul&gt;        &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt;        &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt;        &lt;li&gt;&lt;b&gt;TRUCK&lt;/b&gt; - trucks and utility vehicles&lt;/li&gt;        &lt;li&gt;&lt;b&gt;FORKLIFT&lt;/b&gt; - forklift trucks&lt;/li&gt;        &lt;li&gt;&lt;b&gt;WATER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;AIR&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;QUAD&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;MOTO-BIKE&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;SCOOTER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;SNOW&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;BIKE&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;LOADER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;ROAD_MACHINE&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;EXCAVATOR&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;BACKHOE_LOADER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;BULLDOZER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;GRADER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;CRANE_TOWER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;CRUSHER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;OFF_HIGHWAY_TRUCK&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;ACCESSORY&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;POWER_GENERATOR&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;OTHER&lt;/b&gt; - &lt;/li&gt;        &lt;li&gt;&lt;b&gt;AGRO:[category][:type][:subtype1][:subtype2][:subtype3]&lt;/b&gt; - agro machines&lt;/li&gt;      &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;    &lt;/ul&gt;    &lt;hr size=2 noshade&gt;    &lt;u&gt;Results:&lt;/u&gt;    &lt;ul&gt;    &lt;li&gt;&lt;i&gt;vehicle-extras-list&lt;/i&gt; - list of vehicle extras&lt;/li&gt;    &lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getVehicleExtrasRequest"/>    <output message="tns:getVehicleExtrasResponse"/>  </operation>  <operation name="getVehicleFeatures">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getVehicleFeatures&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available vehicle features (eg. &quot;new vehicle&quot;, &quot;no accident&quot; etc.)&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: CAR):&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt; &lt;li&gt;&lt;b&gt;MOTORBIKE&lt;/b&gt; - motorcycles&lt;/li&gt; &lt;li&gt;&lt;b&gt;TRUCK&lt;/b&gt; - trucks and utility vehicles&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;vehicle-features-list&lt;/i&gt; - list of vehicle features&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: insertion failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getVehicleFeaturesRequest"/>    <output message="tns:getVehicleFeaturesResponse"/>  </operation>  <operation name="getVehicleKinds">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getVehicleKinds&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available vehicle kinds.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;category&lt;/tt&gt; - (default: PARTS):&lt;br&gt;&lt;ul&gt; &lt;li&gt;&lt;b&gt;PARTS&lt;/b&gt; - part category&lt;/li&gt; &lt;li&gt;&lt;b&gt;OTHERS&lt;/b&gt; - other category&lt;/li&gt; &lt;li&gt;&lt;b&gt;CONSTRUCTIONS - construction category&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;kind-list&lt;/i&gt; - list of kinds&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_CATEGORY&lt;/i&gt; - invalid category (factor: category failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getVehicleKindsRequest"/>    <output message="tns:getVehicleKindsResponse"/>  </operation>  <operation name="getVersions">    <documentation>&lt;br&gt;&lt;center&gt;&lt;u&gt;&lt;big&gt;getVersions&lt;/big&gt;&lt;/u&gt;&lt;/center&gt;&lt;br&gt;get list of available car versions.&lt;br&gt;&lt;br&gt;&lt;u&gt;Parameters:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;tt&gt;make-id&lt;/tt&gt; - Car Make id&lt;/li&gt;        &lt;li&gt;&lt;tt&gt;model-id&lt;/tt&gt; - Car Model id&lt;/li&gt;  &lt;li&gt;&lt;tt&gt;webapi-key&lt;/tt&gt; - otoMoto WebAPI access key&lt;/li&gt;      &lt;li&gt;&lt;tt&gt;type&lt;/tt&gt; - vehicle type (default: CAR):&lt;br&gt;        &lt;ul&gt;         &lt;li&gt;&lt;b&gt;CAR&lt;/b&gt; - passanger cars&lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Results:&lt;/u&gt;&lt;ul&gt;  &lt;li&gt;&lt;i&gt;version-list&lt;/i&gt; - list of approved versions&lt;/li&gt;&lt;/ul&gt;&lt;hr size=2 noshade&gt;&lt;u&gt;Errors:&lt;/u&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;ERR_NO_WEBAPI_KEY&lt;/i&gt; - webapi key required (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_WEBAPI_USER&lt;/i&gt; - invalid webapi user (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INACTIVE_WEBAPI_USER&lt;/i&gt; - webapi user is inactive (factor: authorization failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_MAKE&lt;/i&gt; - invalid make (factor: make failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_VEHICLE_TYPE&lt;/i&gt; - invalid vehicle type (factor: listing failed)&lt;/li&gt;&lt;li&gt;&lt;i&gt;ERR_INVALID_MODEL&lt;/i&gt; - invalid model (factor: model failed)&lt;/li&gt;&lt;/ul&gt;</documentation>    <input message="tns:getVersionsRequest"/>    <output message="tns:getVersionsResponse"/>  </operation></portType><binding name="otoMotoWebApiBinding" type="tns:otoMotoWebApiPortType">  <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>  <operation name="doCounterDelete">    <soap:operation soapAction="#doCounterDelete" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doDataStorage">    <soap:operation soapAction="#doDataStorage" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doDealerInsertionActivate">    <soap:operation soapAction="#doDealerInsertionActivate" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doDealerInsertionInactivate">    <soap:operation soapAction="#doDealerInsertionInactivate" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doDealerLogin">    <soap:operation soapAction="#doDealerLogin" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doDealerLogout">    <soap:operation soapAction="#doDealerLogout" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doDealerSearch">    <soap:operation soapAction="#doDealerSearch" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doExport">    <soap:operation soapAction="#doExport" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doExportAck">    <soap:operation soapAction="#doExportAck" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doHello">    <soap:operation soapAction="#doHello" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionDelete">    <soap:operation soapAction="#doInsertionDelete" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionEdit">    <soap:operation soapAction="#doInsertionEdit" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionLogin">    <soap:operation soapAction="#doInsertionLogin" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionLogout">    <soap:operation soapAction="#doInsertionLogout" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionSearch">    <soap:operation soapAction="#doInsertionSearch" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionTransfer">    <soap:operation soapAction="#doInsertionTransfer" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doInsertionTransferAck">    <soap:operation soapAction="#doInsertionTransferAck" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPartnerInsertionActivate">    <soap:operation soapAction="#doPartnerInsertionActivate" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPartnerInsertionInactivate">    <soap:operation soapAction="#doPartnerInsertionInactivate" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPartnerLogin">    <soap:operation soapAction="#doPartnerLogin" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPartnerLogout">    <soap:operation soapAction="#doPartnerLogout" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPhotoDelete">    <soap:operation soapAction="#doPhotoDelete" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPhotoEdit">    <soap:operation soapAction="#doPhotoEdit" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doPrivateInsertionAdd">    <soap:operation soapAction="#doPrivateInsertionAdd" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doSendContactForm">    <soap:operation soapAction="#doSendContactForm" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="doValuationResponse">    <soap:operation soapAction="#doValuationResponse" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getAgroDictionary">    <soap:operation soapAction="#getAgroDictionary" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getAllegroCategories">    <soap:operation soapAction="#getAllegroCategories" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getAllowedCurrencies">    <soap:operation soapAction="#getAllowedCurrencies" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getArticleCategories">    <soap:operation soapAction="#getArticleCategories" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getArticleList">    <soap:operation soapAction="#getArticleList" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getArticlePhoto">    <soap:operation soapAction="#getArticlePhoto" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getCaptcha">    <soap:operation soapAction="#getCaptcha" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getColours">    <soap:operation soapAction="#getFuelTypes" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getConstructionDictionary">    <soap:operation soapAction="#getConstructionDictionary" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getCountries">    <soap:operation soapAction="#getCountries" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getDealerInsertions">    <soap:operation soapAction="#getDealerInsertions" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getFuelTypes">    <soap:operation soapAction="#getFuelTypes" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getGearBoxTypes">    <soap:operation soapAction="#getGearBoxTypes" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getInsertion">    <soap:operation soapAction="#getInsertion" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getInsertionPhoto">    <soap:operation soapAction="#getInsertionPhoto" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getInsertionSearchResults">    <soap:operation soapAction="#getInsertionSearchResults" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getMainPageInsertion">    <soap:operation soapAction="#getMainPageInsertion" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getMakes">    <soap:operation soapAction="#getMakes" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getModels">    <soap:operation soapAction="#getModels" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getNewsList">    <soap:operation soapAction="#getNewsList" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getNewsPhoto">    <soap:operation soapAction="#getNewsPhoto" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getPartCategories">    <soap:operation soapAction="#getPartCategories" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getPartnerInsertions">    <soap:operation soapAction="#getPartnerInsertions" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getPartnerInsertionsNumber">    <soap:operation soapAction="#getPartnerInsertions" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getPrivateActivationCode">    <soap:operation soapAction="#getPrivateActivationCode" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getPromotedInsertions">    <soap:operation soapAction="#getPromotedInsertions" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getProvinces">    <soap:operation soapAction="#getProvinces" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getSearchItems">    <soap:operation soapAction="#getSearchItems" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getSearchParams">    <soap:operation soapAction="#getSearchParams" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getSystemInfo">    <soap:operation soapAction="#getSystemInfo" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getTestString">    <soap:operation soapAction="#getTestString" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getTransmissionTypes">    <soap:operation soapAction="#getTransmissionTypes" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getUserInsertions">    <soap:operation soapAction="#getUserInsertions" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getVehicleCategories">    <soap:operation soapAction="#getVehicleCategories" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getVehicleExtras">    <soap:operation soapAction="#getVehicleExtras" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getVehicleFeatures">    <soap:operation soapAction="#getVehicleFeatures" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getVehicleKinds">    <soap:operation soapAction="#getVehicleKinds" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation>  <operation name="getVersions">    <soap:operation soapAction="#getVersions" style="rpc"/>    <input><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>    <output><soap:body use="encoded" namespace="urn:otoMotoWebApi" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>  </operation></binding><service name="otoMotoWebApi">  <port name="otoMotoWebApiPort" binding="tns:otoMotoWebApiBinding">    <soap:address location="http://otomoto.wp.pl:80/webapi/server.php"/>  </port></service><QOS><RT>327.13</RT><AV>13</AV><TH>5.1</TH><SS>13</SS><RR>67</RR><CO>78</CO><BP>72</BP><LA>24.98</LA><Do>37</Do></QOS></definitions>